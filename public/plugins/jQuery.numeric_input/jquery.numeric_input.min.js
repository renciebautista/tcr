/*
 * jQuery Numeric Input - v0.1.6 - 2015-06-09
 * https://github.com/manuelvanrijn/jquery-numeric_input
 * Copyright (c) 2015 Manuel van Rijn
 * Licensed MIT, GPL
 */
!function(e,i,t,n){var a=function(i,t){this.elem=i,this.$elem=e(i),this.options=t};a.prototype={init:function(){var i=this;if(i.options=e.extend({},e.fn.numeric_input.defaults,i.options),i.$elem.keypress(function(e){i.preventDefaultForKeyCode(e.which)===!0&&e.preventDefault();var t=i.getNewValueForKeyCode(e.which,i.$elem.val());t!==!1&&(i.$elem.val(t),i.options.callback.call(i,t))}),i.options.parseOnBlur===!0&&i.$elem.on("blur",function(){var e=i.parseValue(i.$elem.val());i.$elem.val(e)}),i.options.clearInputOnBlurForZeroValue===!0&&i.$elem.on("focus",function(){var e=i.$elem.val();e=e.replace(/[A-Za-z$]/g,""),e=e.replace("-",""),e=e.replace(i.options.decimal,"."),0===parseFloat(e)&&i.$elem.val("")}),i.$elem.on("input propertychange",function(){var e=i.parseValue(i.$elem.val());i.options.callback.call(i,e)}),i.options.initialParse===!0){var t=i.parseValue(i.$elem.val());i.$elem.val(t)}return i},preventDefaultForKeyCode:function(e){if(e>=48&&57>=e)return!1;switch(e){case 0:case 8:case 9:case 35:case 36:case 37:case 39:case 144:return!1;default:return!0}},getNewValueForKeyCode:function(i,t){return 44!==i&&46!==i&&188!==i&&190!==i||-1!==t.indexOf(this.options.decimal)?45===i&&this.options.allowNegative&&"-"!==t.charAt(0)?"-"+t:!1:(""===e.trim(t)&&this.options.leadingZeroCheck&&(t="0"),t+this.options.decimal)},parseValue:function(e){var i=!1,t=e.replace(/[A-Za-z$]/g,"");if(0===t.length&&this.options.allowEmpty)return"";if(-1!==t.indexOf("-")&&(t=t.replace("-",""),i=!0),(-1!==t.indexOf(".")||-1!==t.indexOf(","))&&(t=t.replace(".",this.options.decimal),t=t.replace(",",this.options.decimal)),0===t.indexOf(this.options.decimal)&&(t="0"+t),i===!0&&this.options.allowNegative===!0&&(t="-"+t),null!==this.options.numberOfDecimals){var a=t.split(this.options.decimal)[1];a!==n&&(a.length>this.options.numberOfDecimals&&(t=Number(Number(String("0."+a)).toFixed(this.options.numberOfDecimals))+Math.floor(Number(t))),a.length<this.options.numberOfDecimals&&(t+=new Array(this.options.numberOfDecimals-a.length+1).join("0"))),t=String(Number(t).toFixed(this.options.numberOfDecimals))}return t}},e.fn.numeric_input=function(i){return this.each(function(){e.data(this,"numeric_input")||e.data(this,"numeric_input",new a(this,i).init())})},e.fn.numeric_input.defaults={decimal:",",numberOfDecimals:null,leadingZeroCheck:!0,initialParse:!0,parseOnBlur:!0,clearInputOnBlurForZeroValue:!0,allowNegative:!1,allowEmpty:!1,callback:function(){}}}(jQuery,window,document);
